#!/bin/bash
# Rock Coffee Bot - Production Setup Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

set -e  # Exit on error

echo "üîí Rock Coffee Bot - Production Setup"
echo "======================================"
echo ""

# Check if .env.production already exists
if [ -f .env.production ]; then
    echo "‚ö†Ô∏è  .env.production —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
    read -p "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ."
        exit 0
    fi
fi

echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.production..."

# Check if .env.production.example exists
if [ ! -f .env.production.example ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: .env.production.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# Copy template
cp .env.production.example .env.production

echo "‚úÖ –®–∞–±–ª–æ–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
echo ""

# Generate secrets
echo "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π..."
JWT_SECRET=$(openssl rand -base64 32 | tr -d '\n')
SESSION_SECRET=$(openssl rand -base64 32 | tr -d '\n')

echo "‚úÖ –°–µ–∫—Ä–µ—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã"
echo ""

# Get bot token
echo "ü§ñ Telegram Bot Token"
echo "–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω: 8369634150:AAHAlkUetDEm6lNSsyFZ1cghLXtLQV72Vcs"
read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π? (Y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Nn]$ ]]; then
    read -p "–í–≤–µ–¥–∏—Ç–µ BOT_TOKEN: " BOT_TOKEN
else
    BOT_TOKEN="8369634150:AAHAlkUetDEm6lNSsyFZ1cghLXtLQV72Vcs"
fi

# Get database password
echo ""
echo "üîê Database Password"
echo "–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å: 7R4P5T4R"
read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π? (Y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Nn]$ ]]; then
    read -s -p "–í–≤–µ–¥–∏—Ç–µ DB_PASSWORD: " DB_PASSWORD
    echo
else
    DB_PASSWORD="7R4P5T4R"
fi

# Replace placeholders in .env.production
echo ""
echo "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

sed -i "s|BOT_TOKEN=your_bot_token_here|BOT_TOKEN=$BOT_TOKEN|g" .env.production
sed -i "s|DB_PASSWORD=your_secure_password_here|DB_PASSWORD=$DB_PASSWORD|g" .env.production
sed -i "s|JWT_SECRET=your_secure_jwt_secret_minimum_32_characters_long|JWT_SECRET=$JWT_SECRET|g" .env.production
sed -i "s|SESSION_SECRET=your_secure_session_secret_here|SESSION_SECRET=$SESSION_SECRET|g" .env.production

echo "‚úÖ .env.production —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
echo ""

# Show summary (without secrets)
echo "üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "  NODE_ENV: production"
echo "  BOT_TOKEN: ${BOT_TOKEN:0:10}..."
echo "  DB_PASSWORD: ${DB_PASSWORD:0:3}***"
echo "  JWT_SECRET: ***–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω***"
echo "  SESSION_SECRET: ***–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω***"
echo ""

# Ask to restart services
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã?"
read -p "–í—ã–ø–æ–ª–Ω–∏—Ç—å docker-compose restart? (Y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Nn]$ ]]; then
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose down

    echo "üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑..."
    docker-compose build bot

    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
    docker-compose up -d

    echo ""
    echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"
    echo ""

    # Show logs
    echo "üìä –õ–æ–≥–∏ –∑–∞–ø—É—Å–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):"
    docker-compose logs --tail 30 bot
else
    echo ""
    echo "‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã:"
    echo "   docker-compose down"
    echo "   docker-compose build bot"
    echo "   docker-compose up -d"
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs -f bot"
echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: docker-compose ps"
echo "  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram"
echo ""
echo "üìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: SECURITY.md"
